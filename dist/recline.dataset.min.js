// # Recline Backbone Models
this.recline=this.recline||{},this.recline.Model=this.recline.Model||{},function(a){var b=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;a.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"query"),this.backend=null,this.get("backend")?this.backend=this._backendFromString(this.get("backend")):this.get("records")&&(this.backend=recline.Backend.Memory),this.fields=new a.FieldList,this.records=new a.RecordList,this._changes={deletes:[],updates:[],creates:[]},this.facets=new a.FacetList,this.recordCount=null,this.queryState=new a.Query,this.queryState.bind("change",this.query),this.queryState.bind("facet:add",this.query),this._store=this.backend,this.backend==recline.Backend.Memory&&this.fetch()},fetch:function(){function d(b){var d=a._normalizeRecordsAndFields(b.records,b.fields);b.useMemoryStore&&(a._store=new recline.Backend.Memory.Store(d.records,d.fields)),a.set(b.metadata),a.fields.reset(d.fields),a.query().done(function(){c.resolve(a)}).fail(function(a){c.reject(a)})}var a=this,c=new b;return this.backend!==recline.Backend.Memory?this.backend.fetch(this.toJSON()).done(d).fail(function(a){c.reject(a)}):d({records:this.get("records"),fields:this.get("fields"),useMemoryStore:!0}),c.promise()},_normalizeRecordsAndFields:function(a,b){!b&&a&&a.length>0&&(a[0]instanceof Array?(b=a[0],a=a.slice(1)):b=_.map(_.keys(a[0]),function(a){return{id:a}}));if(b&&b.length>0&&(b[0]===null||typeof b[0]!="object")){var c={};b=_.map(b,function(a,b){a===null?a="":a=a.toString();var d=a.replace(/^\s+|\s+$/g,"");d===""&&(d="_noname_",a=d);while(d in c)c[a]+=1,d=a+c[a];return a in c||(c[a]=0),{id:d}})}return a&&a.length>0&&a[0]instanceof Array&&(a=_.map(a,function(a){var c={};return _.each(b,function(b,d){c[b.id]=a[d]}),c})),{fields:b,records:a}},save:function(){var a=this;return this._store.save(this._changes,this.toJSON())},transform:function(a){var b=this;if(!this._store.transform){alert("Transform is not supported with this backend: "+this.get("backend"));return}this.trigger("recline:flash",{message:"Updating all visible docs. This could take a while...",persist:!0,loader:!0}),this._store.transform(a).done(function(){b.query(),b.trigger("recline:flash",{message:"Records updated successfully"})})},query:function(a){var c=this,d=new b;this.trigger("query:start"),a&&this.queryState.set(a,{silent:!0});var e=this.queryState.toJSON();return this._store.query(e,this.toJSON()).done(function(a){c._handleQueryResult(a),c.trigger("query:done"),d.resolve(c.records)}).fail(function(a){c.trigger("query:fail",a),d.reject(a)}),d.promise()},_handleQueryResult:function(b){var c=this;c.recordCount=b.total;var d=_.map(b.hits,function(b){var d=new a.Record(b);return d.fields=c.fields,d.bind("change",function(a){c._changes.updates.push(a.toJSON())}),d.bind("destroy",function(a){c._changes.deletes.push(a.toJSON())}),d});c.records.reset(d);if(b.facets){var e=_.map(b.facets,function(b,c){return b.id=c,new a.Facet(b)});c.facets.reset(e)}},toTemplateJSON:function(){var a=this.toJSON();return a.recordCount=this.recordCount,a.fields=this.fields.toJSON(),a},getFieldsSummary:function(){var c=this,d=new a.Query;d.set({size:0}),this.fields.each(function(a){d.addFacet(a.id)});var e=new b;return this._store.query(d.toJSON(),this.toJSON()).done(function(b){b.facets&&_.each(b.facets,function(b,d){b.id=d;var e=new a.Facet(b);c.fields.get(d).facets.reset(e)}),e.resolve(b)}),e.promise()},recordSummary:function(a){return a.summary()},_backendFromString:function(a){var b=null;return recline&&recline.Backend&&_.each(_.keys(recline.Backend),function(c){c.toLowerCase()===a.toLowerCase()&&(b=recline.Backend[c])}),b}}),a.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(a){return val=this.getFieldValueUnrendered(a),a&&!_.isUndefined(a.renderer)&&(val=a.renderer(val,a,this.toJSON())),val},getFieldValueUnrendered:function(a){if(!a)return"";var b=this.get(a.id);return a.deriver&&(b=a.deriver(b,a,this)),b},summary:function(a){var b=this,c='<div class="recline-record-summary">';return this.fields.each(function(a){a.id!="id"&&(c+='<div class="'+a.id+'"><strong>'+a.get("label")+"</strong>: "+b.getFieldValue(a)+"</div>")}),c+="</div>",c},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}}),a.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:a.Record}),a.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:!1},initialize:function(b,c){if("0"in b)throw new Error("Looks like you did not pass a proper hash with id to Field constructor");this.attributes.label===null&&this.set({label:this.id}),this.attributes.type.toLowerCase()in this._typeMap&&(this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]),c&&(this.renderer=c.renderer,this.deriver=c.deriver),this.renderer||(this.renderer=this.defaultRenderers[this.get("type")]),this.facets=new a.FacetList},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(a,b,c){return JSON.stringify(a)},geo_point:function(a,b,c){return JSON.stringify(a)},number:function(a,b,c){var d=b.get("format");return d==="percentage"?a+"%":a},string:function(a,b,c){var d=b.get("format");if(d==="markdown"){if(typeof Showdown!="undefined"){var e=new Showdown.converter;return out=e.makeHtml(a),out}return a}return d=="plain"?a:(a&&typeof a=="string"&&(a=a.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')),a)}}}),a.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:a.Field}),a.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",start:"",stop:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(a){var b=JSON.parse(JSON.stringify(a));_.keys(a).length<=3&&(b=_.defaults(b,this._filterTemplates[a.type]));var c=this.get("filters");c.push(b),this.trigger("change:filters:new-blank")},updateFilter:function(a,b){},removeFilter:function(a){var b=this.get("filters");b.splice(a,1),this.set({filters:b}),this.trigger("change")},addFacet:function(a){var b=this.get("facets");if(_.contains(_.keys(b),a))return;b[a]={terms:{field:a}},this.set({facets:b},{silent:!0}),this.trigger("facet:add",this)},addHistogramFacet:function(a){var b=this.get("facets");b[a]={date_histogram:{field:a,interval:"day"}},this.set({facets:b},{silent:!0}),this.trigger("facet:add",this)}}),a.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}}),a.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:a.Facet}),a.ObjectState=Backbone.Model.extend({}),Backbone.sync=function(a,b,c){return b.backend.sync(a,b,c)}}(this.recline.Model),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Memory=this.recline.Backend.Memory||{},function(a){a.__type__="memory";var b=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;a.Store=function(a,c){var d=this;this.records=a,this.data=this.records,c?this.fields=c:a&&(this.fields=_.map(a[0],function(a,b){return{id:b,type:"string"}})),this.update=function(a){_.each(d.records,function(b,c){a.id===b.id&&(d.records[c]=a)})},this.remove=function(a){var b=_.reject(d.records,function(b){return a.id===b.id});this.records=b},this.save=function(a,c){var d=this,e=new b;return _.each(a.updates,function(a){d.update(a)}),_.each(a.deletes,function(a){d.remove(a)}),e.resolve(),e.promise()},this.query=function(a){var c=new b,d=a.size||this.records.length,e=a.from||0,f=this.records;f=this._applyFilters(f,a),f=this._applyFreeTextQuery(f,a),_.each(a.sort,function(a){var b=a.field;f=_.sortBy(f,function(a){var c=a[b];return c}),a.order=="desc"&&f.reverse()});var g=this.computeFacets(f,a),h={total:f.length,hits:f.slice(e,e+d),facets:g};return c.resolve(h),c.promise()},this._applyFilters=function(a,b){function h(a){var b=g[a.field].type||"string";return f[b]}function i(a,b){var c=h(b),d=c(a[b.field]),e=c(b.term);return d===e}function j(a,b){var c=b.start==null||b.start==="",d=b.stop==null||b.stop==="",e=h(b),f=e(a[b.field]),g=e(b.start),i=e(b.stop);return(!c||!d)&&f===""?!1:(c||f>=g)&&(d||f<=i)}function k(){}var c=b.filters,e={term:i,range:j,geo_distance:k},f={integer:function(a){return parseFloat(a,10)},"float":function(a){return parseFloat(a,10)},number:function(a){return parseFloat(a,10)},string:function(a){return a.toString()},date:function(a){return(new Date(a)).valueOf()},datetime:function(a){return(new Date(a)).valueOf()}},g={};return _.each(d.fields,function(a){g[a.id]=a}),_.filter(a,function(a){var b=_.map(c,function(b){return e[b.type](a,b)});return _.all(b,_.identity)})},this._applyFreeTextQuery=function(a,b){if(b.q){var c=b.q.split(" "),e=_.map(c,function(a){return new RegExp(a.toLowerCase())});a=_.filter(a,function(a){var b=!0;return _.each(e,function(c){var e=!1;_.each(d.fields,function(b){var d=a[b.id];d!==null&&d!==undefined?d=d.toString():d="",e=e||c.test(d.toLowerCase())}),b=b&&e}),b})}return a},this.computeFacets=function(a,b){var c={};return b.facets?(_.each(b.facets,function(a,b){c[b]=(new recline.Model.Facet({id:b})).toJSON(),c[b].termsall={}}),_.each(a,function(a){_.each(b.facets,function(b,d){var e=b.terms.field,f=a[e],g=c[d];f?g.termsall[f]=g.termsall[f]?g.termsall[f]+1:1:g.missing=g.missing+1})}),_.each(b.facets,function(a,b){var d=c[b],e=_.map(d.termsall,function(a,b){return{term:b,count:a}});d.terms=_.sortBy(e,function(a){return-a.count}),d.terms=d.terms.slice(0,10)}),c):c},this.transform=function(a){var c=new b;return d.records=_.map(d.records,a),d.records=_.filter(d.records,function(a){return a!=null}),c.resolve(),c.promise()}}}(this.recline.Backend.Memory);